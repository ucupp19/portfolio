# Ultra-lightweight build for 256MB VPS
FROM node:20-alpine AS deps

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies with minimal memory usage
RUN npm ci --only=production --no-audit --no-fund --prefer-offline

# Build stage with extreme memory optimization
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies with memory optimization
RUN npm ci --no-audit --no-fund --prefer-offline

# Copy source code
COPY . .

# Build with extreme memory limits
ENV NODE_OPTIONS="--max-old-space-size=128"
ENV NODE_ENV=production
RUN npm run build

# Production stage - minimal nginx
FROM nginx:alpine

# Remove unnecessary packages and clean cache
RUN apk del --purge && \
    rm -rf /var/cache/apk/* /tmp/* /var/tmp/*

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy minimal nginx configuration
COPY nginx.ultra-lightweight.conf /etc/nginx/nginx.conf

# Copy SSL certificates
COPY ssl/ /etc/nginx/ssl/

# Expose ports
EXPOSE 80 443

# Start nginx with minimal workers
CMD ["nginx", "-g", "daemon off;"] 